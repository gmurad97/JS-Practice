// üü¢ –õ–µ–≥–∫–∏–π —É—Ä–æ–≤–µ–Ω—å (10 –∑–∞–¥–∞—á)
// –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–¥?
// const obj = {
// 	name: "Alice",
// 	sayHi() {
// 		console.log(this.name);
// 	}
// };
// obj.sayHi();
//–û—Ç–≤–µ—Ç: Alice
// =============================================================================
// –ò—Å–ø—Ä–∞–≤—å –∫–æ–¥, —á—Ç–æ–±—ã sayHi —Ä–∞–±–æ—Ç–∞–ª –ø–æ—Å–ª–µ setTimeout:
// const user = {
//   name: "Bob",
//   sayHi() {
//     setTimeout(function () {
//       console.log(this.name);
//     }, 1000);
//   }
// };
// user.sayHi();

// const user = {
// 	name: "Bob",
// 	sayHi() {
// 		setTimeout((function () {
// 			console.log(this.name);
// 		}).bind(this), 1000);
// 	}
// };
// user.sayHi();
// =============================================================================
// –í—ã–≤–µ–¥–∏ Hello, John! –∏—Å–ø–æ–ª—å–∑—É—è call:
// function greet() {
// 	console.log(`Hello, ${this.name}!`);
// }
// const person = { name: "John" };
// greet.call(person);
// =============================================================================
// –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∏ –ø–æ—á–µ–º—É?
// const obj = {
// 	name: "Eve",
// 	sayHi: () => console.log(this.name)
// };
// obj.sayHi();
// –£ —Å—Ç—Ä–µ–ª–æ—á–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ sayHi –Ω–µ—Ç —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ this. –û–Ω–∞ –±–µ—Ä—ë—Ç this –∏–∑ –æ–∫—Ä—É–∂–∞—é—â–µ–≥–æ –ª–µ–∫—Å–∏—á–µ—Å–∫–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è (–≤–Ω–µ obj)
// –ü–æ—ç—Ç–æ–º—É –æ—Ç–≤–µ—Ç undefined
// =============================================================================
// –ò—Å–ø–æ–ª—å–∑—É—è bind, –ø—Ä–∏–≤—è–∂–∏ —Ñ—É–Ω–∫—Ü–∏—é –∫ –æ–±—ä–µ–∫—Ç—É:
// const user = { name: "Alex" };
// function sayName() {
// 	console.log(this.name);
// }
// const bound = sayName.bind(user);
// bound();
// =============================================================================
// –ö–∞–∫–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –±—É–¥–µ—Ç —É sayHi? –ü–æ—á–µ–º—É?
// const obj = {
// 	name: "Anna",
// 	sayHi: function () {
// 		const inner = () => console.log(this.name);
// 		inner();
// 	}
// };
// obj.sayHi();
// –£ —Å—Ç—Ä–µ–ª–æ—á–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ inner –Ω–µ—Ç —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ this. –û–Ω–∞ –±–µ—Ä—ë—Ç this –∏–∑ –æ–∫—Ä—É–∂–∞—é—â–µ–≥–æ –ª–µ–∫—Å–∏—á–µ—Å–∫–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∞ —ç—Ç–æ
// sayHi –∞ –æ–Ω–∞ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ obj –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è
// –û—Ç–≤–µ—Ç: Anna
// =============================================================================
// –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç—Å—è?
// const obj = { name: "Tom" };
// const say = function () { console.log(this.name); };
// say.call(obj);
// –û—Ç–≤–µ—Ç: Tom
// =============================================================================
// –ü–µ—Ä–µ–¥–∞–π –∞—Ä–≥—É–º–µ–Ω—Ç—ã —á–µ—Ä–µ–∑ apply:
// function showInfo(city, country) {
// 	console.log(`${this.name} lives in ${city}, ${country}`);
// }
// const person = { name: "Olga" };
// showInfo.apply(person, ["Baku", "Azerbaijan"]);
// =============================================================================
// –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–¥?
// const obj = { x: 42 };
// function printX() {
// 	console.log(this.x);
// }
// const bound = printX.bind(obj);
// bound();
// –û—Ç–≤–µ—Ç: 42
// =============================================================================
// –ò—Å–ø—Ä–∞–≤—å –æ—à–∏–±–∫—É –≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ this:
// const user = {
// 	name: "Kate",
// 	sayHi() {
// 		const fn = (function () {
// 			console.log(this.name);
// 		}).bind(this);
// 		fn();
// 	}
// };
// user.sayHi();
// =============================================================================
// üü° –°—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å (10 –∑–∞–¥–∞—á)
// –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–¥ –∏ –ø–æ—á–µ–º—É?
// const user = {
// 	name: "Sam",
// 	sayHi() {
// 		return function () {
// 			console.log(this);
// 		};
// 	}
// };
// user.sayHi()();
// undefined –ø–æ—Ç–æ–º—É —á—Ç–æ sayHi –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –±–µ–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∞ this —É–∫–∞–∑—ã–≤–∞–µ—Ç global || window
// =============================================================================
// –°–¥–µ–ª–∞–π —Ç–∞–∫, —á—Ç–æ–±—ã this –Ω–µ –ø–æ—Ç–µ—Ä—è–ª—Å—è –≤ callback:
// const obj = {
// 	count: 0,
// 	inc() {
// 		setTimeout((function () {
// 			this.count++;
// 			console.log(this.count);
// 		}).bind(this), 100);
// 	}
// };
// obj.inc();
// =============================================================================
// –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ bind –¥–ª—è –º–µ—Ç–æ–¥–∞ –º–∞—Å—Å–∏–≤–∞:
// const person = { name: "Max" };
// function sayHi() {
// 	console.log("Hi " + this.name);
// }
// ["a", "b", "c"].forEach(sayHi.bind(person));
// =============================================================================
// –ü–æ—á–µ–º—É this —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–¥–µ—Å—å?
// const timer = {
// 	seconds: 0,
// 	start() {
// 		setInterval(() => {
// 			this.seconds++;
// 			console.log(this.seconds);
// 		}, 1000);
// 	}
// };
// timer.start();
// –°—Ç—Ä–µ–ª–æ—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤ setInterval(...) –Ω–µ —Å–æ–∑–¥–∞—ë—Ç —Å–≤–æ–π this.
// –û–Ω–∞ –±–µ—Ä—ë—Ç this –∏–∑ –≤–Ω–µ—à–Ω–µ–π –æ–±–ª–∞—Å—Ç–∏, —Ç–æ –µ—Å—Ç—å –∏–∑ –º–µ—Ç–æ–¥–∞ start.
// –ê –º–µ—Ç–æ–¥ start() –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∫–∞–∫ timer.start()
// –°–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ, this –≤–Ω—É—Ç—Ä–∏ start() —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ timer.
// =============================================================================
// –°–¥–µ–ª–∞–π —Ñ—É–Ω–∫—Ü–∏—é —Å –ø–µ—Ä–µ–¥–∞—á–µ–π –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ —á–µ—Ä–µ–∑ apply:
// function sum() {
// 	return Array.from(arguments).reduce((a, b) => a + b, 0);
// }
// const args = [1, 2, 3, 4];
// const result = sum.apply(null, args);
// const result = sum.apply(this, args); // –ª—É—á—à–µ —Ç–∞–∫ —á—Ç–æ–±—ã –∫–æ–Ω—Ç–µ–∫—Å—Ç –Ω–µ —Ç–µ—Ä—è–ª—Å—è
// console.log(result); // –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 10
// =============================================================================
// –ß–µ–º bind –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç call –∏ apply? –û–±—ä—è—Å–Ω–∏ –∏ –ø—Ä–æ–¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–π –Ω–∞ –ø—Ä–∏–º–µ—Ä–µ.
// bind - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é —Å –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º –∏ –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏
// call & apply - –≤—ã–∑–æ–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ —Å –∑–∞–¥–∞–Ω–Ω—ã–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º –∏ –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏
// call - –∞—Ä–≥—É–º–µ–Ω—Ç—ã —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –ø–æ –æ–¥–Ω–æ–π
// aplly - –∞—Ä–≥—É–º–µ–Ω—Ç—ã —á–µ—Ä–µ–∑ –º–∞—Å—Å–∏–≤
// =============================================================================
// –°–æ–∑–¥–∞–π —Ñ—É–Ω–∫—Ü–∏—é, —É –∫–æ—Ç–æ—Ä–æ–π –Ω–µ–ª—å–∑—è –∏–∑–º–µ–Ω–∏—Ç—å this:
// function sayName() {
// 	console.log(this.name);
// }
// const user = { name: "Den" };
// const f = sayName.bind(user); // –≤–æ—Ç —Ç—É—Ç —É–∂–µ —Å–æ–∑–¥–∞–Ω–∞ Bind —è–≤–ª—è–µ—Ç—Å—è —Å—É–ø–µ—Ä –∫–ª–µ–µ–º –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ this
// f.call({ name: "Hack" }); // –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç? Den
// =============================================================================
// –°–¥–µ–ª–∞–π counter —Å this –∏ bind:
// function Counter() {
// 	this.count = 0;
// 	setInterval(function () {
// 		this.count++;
// 		console.log(this.count);
// 	}.bind(this), 1000);
// }
// new Counter();
// –ó–∞–¥–∞—á–∞ —É–∂–µ —Ä–µ—à–µ–Ω–∞,—Ä–µ—à–∞—Ç—å –Ω–µ —á–µ–≥–æ —Ç–∞–π–º–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ bind
// =============================================================================
// –ü–µ—Ä–µ–¥–∞–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –≤ –º–µ—Ç–æ–¥ –º–∞—Å—Å–∏–≤–∞:
// const obj = {
// 	multiplier: 2,
// 	multiply(n) {
// 		return n * this.multiplier;
// 	}
// };
// const result = [1, 2, 3].map(obj.multiply, obj);
// console.log(result); // –ü–æ—á–µ–º—É –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç? –¢–µ–ø–µ—Ä—å —Ä–∞–±–æ—Ç–∞–µ—Ç :)
// =============================================================================
// –ß—Ç–æ –¥–µ–ª–∞–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥?
// const obj = {
// 	value: 10,
// 	getValue: function () {
// 		return () => this.value;
// 	}
// };
// console.log(obj.getValue()());
// 10 - —Å—Ç—Ä–µ–ª–æ—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞—â–∞–µ—Ç—Å—è –∫ –≤–Ω–µ—à–Ω–µ–º—É –ª–µ–∫—Å–∏—á–µ—Å–∫–æ–º—É –æ–∫—Ä—É–∂–µ–Ω–∏—é –∞ —ç—Ç–æ getValue –∞ –æ–Ω —É–∂–µ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑
// obj.getValue –∏ –ø–µ—Ä–µ–¥–∞–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç obj
// =============================================================================
// üî¥ –°–ª–æ–∂–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å (10 –∑–∞–¥–∞—á)
// –†–µ–∞–ª–∏–∑—É–π bind –≤—Ä—É—á–Ω—É—é.
// Function.prototype.myBind = function (context, ...boundArgs) {
// 	const fn = this;
// 	return function (...callArgs) {
// 		return fn.apply(context, [...boundArgs, ...callArgs]);
// 	};
// };
// =============================================================================
// –ü–æ—á–µ–º—É —ç—Ç–æ—Ç –∫–æ–¥ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ? –ò—Å–ø—Ä–∞–≤—å.
// const button = {
// 	text: "Click me",
// 	handleClick() {
// 		console.log(this.text);
// 	}
// };
// document.getElementById("btn").addEventListener("click", button.handleClick.bind(button));
// =============================================================================
// –ü–µ—Ä–µ–¥–∞—á–∞ this –≤ –∑–∞–º—ã–∫–∞–Ω–∏–∏:
// const obj = {
// 	value: 100,
// 	getValueFunc() {
// 		const self = this;
// 		return function () {
// 			return self.value;
// 		};
// 	}
// };
// console.log(obj.getValueFunc()());
// –ù–µ –≤–∏–∂—É –ø—Ä–æ–±–ª–µ–º—ã –∑–∞–¥–∞—á–∞ —Ä–µ—à–µ–Ω–∞
// =============================================================================
// –†–µ–∞–ª–∏–∑—É–π –º–µ—Ç–æ–¥ .once() –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–∏, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–º this —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è.
// Function.prototype.once = function (context, ...boundArgs) {
// 	const fn = this;
// 	let isCalled = false;
// 	let result;
// 	return function (...args) {
// 		if (!isCalled) {
// 			isCalled = true;
// 			result = fn.apply(context || this, [...boundArgs, ...args]);
// 		}
// 		else {
// 			console.log("–§—É–Ω–∫—Ü–∏—è —É–∂–µ –æ—Ç—Ä–∞–±–æ—Ç–∞–ª–∞ :)");
// 		}
// 		return result;
// 	};
// };
// function greet() {
// 	console.log("Hello");
// }
// const onceGreet = greet.once();
// onceGreet(); // Hello
// onceGreet(); // –§—É–Ω–∫—Ü–∏—è —É–∂–µ –æ—Ç—Ä–∞–±–æ—Ç–∞–ª–∞ :)
// onceGreet(); // –§—É–Ω–∫—Ü–∏—è —É–∂–µ –æ—Ç—Ä–∞–±–æ—Ç–∞–ª–∞ :)
// =============================================================================
// –ü–æ—á–µ–º—É this –≤–µ–¥—ë—Ç —Å–µ–±—è –ø–æ-—Ä–∞–∑–Ω–æ–º—É –∑–¥–µ—Å—å:
// const obj = {
// 	method: function () {
// 		return {
// 			inner: function () {
// 				console.log(this);
// 			}
// 		};
// 	}
// };
// obj.method().inner();
//this –≤–Ω—É—Ç—Ä–∏ inner —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ —Ç–æ—Ç –æ–±—ä–µ–∫—Ç, –∫–æ—Ç–æ—Ä—ã–π –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç method, –∞ –Ω–µ –Ω–∞ obj
// =============================================================================
// –£—Å–ª–æ–∂–Ω—ë–Ω–Ω—ã–π bind (—Å –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏ –∏ –Ω–æ–≤—ã–º –≤—ã–∑–æ–≤–æ–º —á–µ—Ä–µ–∑ new)
// Function.prototype.myBind = function (context, ...bindArgs) {
// 	const originalFn = this;
// 	function boundFn(...callArgs) {
// 		if (this instanceof boundFn) {
// 			return new originalFn(...bindArgs, ...callArgs);
// 		}
// 		return originalFn.apply(context, [...bindArgs, ...callArgs]);
// 	}
// 	boundFn.prototype = Object.create(originalFn.prototype);
// 	return boundFn;
// };
// =============================================================================
// –û–±—ä—è—Å–Ω–∏ –∏ –∏—Å–ø—Ä–∞–≤—å –ø–æ–≤–µ–¥–µ–Ω–∏–µ:
// const obj = {
// 	x: 10,
// 	getX: function () {
// 		return this.x;
// 	}
// };
// const retrieveX = obj.getX.bind(obj); //–¢—É—Ç —Ç–µ—Ä—è–µ—Ç—Å—è –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ—Ç–æ–º—É —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è - –Ω—É–∂–Ω–æ –ø—Ä–∏–≤—è–∑–∞—Ç—å
// console.log(retrieveX());
// =============================================================================
// –°–¥–µ–ª–∞–π –∫–∞—Ä—Ä–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º this.
// function curry(fn) {
// 	return function curried(...args) {
// 		const that = this;
// 		if (args.length >= fn.length) {
// 			return fn.apply(that, args);
// 		}
// 		return function (...nextArgs) {
// 			return curried.apply(that, [...args, ...nextArgs]);
// 		};
// 	};
// }
// function add(a, b, c) {
// 	return this.base + a + b + c;
// }
// const obj = { base: 10 };
// const curried = curry(add);
// console.log(curried.call(obj)(1)(2)(3));
// =============================================================================
// –ö–∞–∫ this —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –∫–ª–∞—Å—Å–µ –∏ –≤ callback?
// class Timer {
// 	constructor() {
// 		this.seconds = 0;
// 	}
// 	start() {
// 		setInterval((function () {
// 			this.seconds++;
// 			console.log(this.seconds);
// 		}).bind(this), 1000);
// 	}
// }
// new Timer().start();
// –ó–¥–µ—Å—å —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –æ—Ç –∫–ª–∞—Å—Å–∞ –∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç —Ç–µ—Ä—è–µ—Ç—Å—è –∏–∑ –∑–∞ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ –¥–æ–±–∞–≤–ª—è–µ–º bind –∏ –≤—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
// =============================================================================
// –ò—Å–ø–æ–ª—å–∑—É–π Reflect.apply –∏ –æ–±—ä—è—Å–Ω–∏, –∑–∞—á–µ–º –æ–Ω –Ω—É–∂–µ–Ω.
// Reflect.apply ‚Äî —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ Function.prototype.apply.
// –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏ —Å —è–≤–Ω—ã–º —É–∫–∞–∑–∞–Ω–∏–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ (this) –∏ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤.
// Reflect.apply(targetFn, thisArg, argsArray);
// =============================================================================
