// 1.Глобальная область видимости
// Что выведет код? Почему?
// var a = 10;
// if (true) {
//   var a = 20;
// }
// console.log(a);
/* var a = 20; перезапишет переменную и ответ будет 20.Потому что var
является глобальной переменной в области и даже если объявить ее в блоке видимости
он всеравно перезапишет глобальную область a и ответ будет 20 */

// 2.Переменная внутри функции
// Что выведет код? Почему?
// function test() {
//   if (true) {
//     var message = "Hello";
//   }
//   console.log(message);
// }
// test();
// console.log(message);
/* console.log(message); //message is not defined ошибка будет
я буду рассуждать как C# программист...функция выполняется после test(); сборщик мусора все очищает и поэтому
переменная не видится */

// 3.Всплытие (Hoisting)
// Какой будет результат выполнения? Почему?
// console.log(num);
// var num = 5;
// console.log(num);
/* я сначала думла о поднятие но потом понял что работает только для функций...тогда будет так
сначала undefined а потом 5 потому что изначально код идет сверху вниз переменая не объявлена а потом объвляется */

// 4.Повторное объявление var
// Какой будет результат выполнения?
// var name = "Alice";
// var name = "Bob";
// console.log(name);
/* ну тут уже иззи сначала создается переменая name Alice а потом перезаписывается на Bob ответ Bob */

// 5.Глобальная переменная через var
// Что выведет window.testVar в браузере? Почему?
// var testVar = 123;
// console.log(window.testVar);
/* Ответ 123 window так же как и var в глобальной области видимости */

// 6.Всплытие внутри функции
// Какой результат выполнения? Почему?
// function example() {
//     console.log(a);
//     var a = 100;
//     console.log(a);
// }
// example();
/* опять таки я думал про поднятие но нет...переменая не объявлена сначала undefined а потом 100 */

// 7.IIFE (Immediately Invoked Function Expression)
// Что выведет этот код? Почему?
// (function () {
//     var x = 50;
//     console.log(x);
// })();
// console.log(x);
/* у самовызывающих колбэк функций будет аналогичное поведение для сборщика мусора поэтому 50 +  x is not defined error */

// 8.var внутри цикла
// Какой результат выполнения? Почему?
// for (var i = 0; i < 5; i++) {
//     setTimeout(() => console.log(i), 1000);
// }
/* сначала выполняется статика т.е весь цикл а потом уже eventloop т.е стек асинхроники
будет задержка 1000мс а потом разом все выйдут 5 5 5 5 5 */

// 8.var внутри цикла(EXTRA LET)
// Какой результат выполнения? Почему?
// for (let i = 0; i < 5; i++) {
//     setTimeout(() => console.log(i), 1000);
// }
/* в отличие от глобальной области видимости var, let будет создаваться каждый раз новым т.е 
var примит только последний элемент т.е 5 а let отобразит все т.е ответ уже будет 0 1 2 3 4
 */